{"version":3,"file":"static/js/356.8f8d9373.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Loader/Loader.jsx","redux/filter/filterSelectors.js","components/Spinner/Spinner.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.js","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/DeleteAllContacts/DeleteAllContacts.module.css?64b5","components/DeleteAllContacts/DeleteAllContacts.js","pages/Contacts.js","redux/contacts/contactsSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Container_Container__dPyVg\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/Container/Container.module.css' \n\n\nexport const Container = ({ children }) =>\n    <div className={css.Container}>\n        {children}\n    </div>;\n\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\n\n","import React from 'react';\n\nimport { Audio } from  'react-loader-spinner'\n\n\n\nexport const Loader = () => (\n  <h1 style={{ margin: '0 auto' }}>\n    Please wait...\n      <Audio width = \"100%\" />\n  </h1>\n);\n\n\n\n// export default Loader;\n","export const getFilter = state => state.filter; ","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"ContactForm_Form__IBmOq\",\"FormLabel\":\"ContactForm_FormLabel__SwfwS\",\"FormBtn\":\"ContactForm_FormBtn__qtcqm\",\"FormInput\":\"ContactForm_FormInput__s9Pni\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { selectAllContacts, selectLoading } from 'redux/contacts/contactsSelectors';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nimport css from './ContactForm.module.css';\n\n\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n\n    const contacts = useSelector(selectAllContacts);\n    // console.log(\"Contacts==>contacts:\", contacts); //!\n\n    const isLoading = useSelector(selectLoading);\n    // console.log(\"ContactListItem==>isLoading:\", isLoading); //!\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        if (\n            contacts.find(item => item.name.toLowerCase() === name.toLowerCase())\n        ) {\n            // alert(`${name} уже есть в контактах.`);\n            toast.warning(`${name} уже есть в контактах.`);\n            form.reset();\n            return;\n        }\n\n        dispatch(addContact({ name, number }));\n        form.reset();\n        return;\n    };\n\n\n\n    return (\n        <>\n            <form\n                className={css.Form}\n                onSubmit={handleSubmit}\n            >\n\n                <label\n                    className={css.FormLabel}\n                >\n                    {/* Name */}\n                    {isLoading ? \"Please wait...\" : \"Name\"}\n                    <br />\n                    <input\n                        className={css.FormInput}\n                        id=\"inputName\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    // value={nameValue}\n                    // onChange={handleChange}\n                    />\n                </label>\n                <br />\n\n                <label className={css.FormLabel}>\n                    {/* Number */}\n                    {isLoading ? \"...\" : \"Number\"}\n                    <br />\n                    <input\n                        className={css.FormInput}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    // value={numberValue}\n                    // onChange={handleChange}\n                    />\n                </label>\n                <br />\n\n                <button\n                    className={css.FormBtn}\n                    type=\"submit\"\n                    disabled={isLoading}\n                >\n                    {/* Add contact */}\n                    {isLoading ? <Spinner size=\"32\">Add contact</Spinner> : \"Add contact\"}\n                </button>\n            </form>\n\n            <ToastContainer autoClose={1500} theme={\"colored\"} />\n        </>\n    );\n}\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"FilterLabel\":\"Filter_FilterLabel__OSs84\",\"FilterInput\":\"Filter_FilterInput__-+rOd\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport { changesFilter } from 'redux/filter/filterSlice';\n\nimport css from 'components/Filter/Filter.module.css' \n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n  // console.log(\"Filter==>filter:\", filter); //!\n\n//! запись значения из input-(Find contacts by name) в filter\n    const changeFilter = (event) => {\n        const filterValue = event.currentTarget.value;\n        dispatch(changesFilter({ filterValue }));\n    };\n\n\n  return (\n    <label className={css.FilterLabel}>\n      Find contacts by name\n      <input\n        className={css.FilterInput}\n        type=\"text\"\n        // value={value}\n        value={filter}\n        // onChange={onChange}\n        onChange={changeFilter}\n      />\n    </label>\n)};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"FormEdit\":\"ContactEditor_FormEdit__u3Qim\",\"FormLabelEdit\":\"ContactEditor_FormLabelEdit__ul2rA\",\"FormBtnEdit\":\"ContactEditor_FormBtnEdit__nK0vb\",\"FormInputEdit\":\"ContactEditor_FormInputEdit__EXW93\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/contactsOperations';\nimport PropTypes from 'prop-types';\n\n\nimport { selectLoading } from 'redux/contacts/contactsSelectors';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nimport css from './ContactEditor.module.css';\n\n\nexport const ContactEditor = ({ id, name, number, toggleModal }) => {\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(selectLoading);\n    // console.log(\"ContactListItem==>isLoading:\", isLoading); //!\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        // const newName = form.elements.name.value; //! 1-й вариант\n        // const newNumber = form.elements.number.value; //! 1-й вариант\n\n        // dispatch(editContact({ id, newName, newNumber })); //! 1-й вариант\n        dispatch(\n            editContact({\n                id,\n                name: form.elements.name.value,\n                number: form.elements.number.value,\n            })\n        ); //! 2-й вариант\n        form.reset();\n        toggleModal()\n        return;\n    };\n\n\n\n    return (\n        <>\n            <form\n                className={css.FormEdit}\n                onSubmit={handleSubmit}\n            >\n\n                <label\n                    className={css.FormLabelEdit}\n                >\n                    {/* Name */}\n                    {isLoading ? \"Please wait...\" : \"Name\"}\n                    <br />\n                    <input\n                        className={css.FormInputEdit}\n                        id=\"inputName\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        defaultValue={name}\n                    // onChange={handleChange}\n                    />\n                </label>\n                <br />\n\n                <label className={css.FormLabelEdit}>\n                    {/* Number */}\n                    {isLoading ? \"...\" : \"Number\"}\n                    <br />\n                    <input\n                        className={css.FormInputEdit}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        defaultValue={number}\n                    // onChange={handleChange}\n                    />\n                </label>\n                <br />\n\n                <button\n                    className={css.FormBtnEdit}\n                    type=\"submit\"\n                    disabled={isLoading}\n                >\n                    {/* Edit contact */}\n                    {isLoading ? <Spinner size=\"32\">Add contact</Spinner> : \"Edit contact\"}\n\n                </button>\n            </form>\n        </>\n    );\n}\n\nContactEditor.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/Modal/Modal.module.css' \n\n\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\n\nexport function Modal({ children, onClose }) {\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]); \n\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n\n\n    return createPortal(\n      <div\n        className={css.Overlay}\n        onClick={handleBackdropClick}\n      >\n          <div className={css.Modal}>\n          {children}\n          </div>\n      </div>,\n      modalRoot,\n    );\n  }\n\n\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactListItem\":\"ContactListItem_ContactListItem__sSK4a\",\"ContactListText\":\"ContactListItem_ContactListText__A1dah\",\"ContactListNumber\":\"ContactListItem_ContactListNumber__2WeGK\",\"ContactListEditBtn\":\"ContactListItem_ContactListEditBtn__V1H9K\",\"ContactListDeleteBtn\":\"ContactListItem_ContactListDeleteBtn__TE5BB\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectLoading } from 'redux/contacts/contactsSelectors';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\n// import { Spinner } from 'components/Spinner/Spinner';\nimport { Modal } from 'components/Modal/Modal';\n\nimport css from './ContactListItem.module.css';\n\n\n\nexport const ContactListItem = ({ id, name, number }) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(selectLoading);\n    // console.log(\"ContactListItem==>isLoading:\", isLoading); //!\n\n    const handleDelete = () => dispatch(deleteContact(id));\n\n\n    const toggleModal = () => {\n        setShowModal(!showModal);\n    };\n\n    const handleEdit = () => {\n        toggleModal()\n        //! +++++++++++++++++++++++++++++++++++\n        // const newName = \"RoseEDIT\"\n        // const newNumber = \"000-00-00\"\n        // console.log(\"id:\", id);\n        // console.log(\"newName:\", newName);\n        // console.log(\"newNumber:\", newNumber);\n\n        // ContactForm(newName, newNumber)\n\n        // dispatch(editContact({ id, newName, newNumber }))\n        //! +++++++++++++++++++++++++++++++++++\n    };\n\n\n\n\n    return (\n        <>\n            <li className={css.ContactListItem}>\n                <p className={css.ContactListText}>{name}:\n                    <span className={css.ContactListNumber}\n                    > {number}\n                    </span>\n                </p>\n                <button\n                    type=\"button\"\n                    className={css.ContactListEditBtn}\n                    onClick={handleEdit}\n                    disabled={isLoading}\n                >\n                    Edit\n                    {/* {isLoading ? [<Spinner size=\"18\" />, \" Editing...\"] : \"Edit\"} */}\n                </button>\n                <button\n                    type=\"button\"\n                    className={css.ContactListDeleteBtn}\n                    onClick={handleDelete}\n                    // onClick={() => deleteContact(id)}\n                    disabled={isLoading}\n                >\n                    Delete\n                    {/* {isLoading ? [<Spinner size=\"18\" />, \" Deleting...\"] : \"Delete\"} */}\n                </button>\n\n                {showModal && (\n                    <Modal onClose={toggleModal}>\n                        <ContactEditor\n                            id={id}\n                            name={name}\n                            number={number}\n                            toggleModal={toggleModal}\n\n                        />\n                    </Modal>\n                )}\n            </li>\n        </>\n    );\n};\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\"};","// import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\n\n\nimport css from './ContactList.module.css';\n\n\n\nexport const ContactList = ({ visibleContacts }) => {\n    return (\n        <ul className={css.ContactList}>\n            {visibleContacts.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n        </ul>\n    );\n};\n\n\nContactList.propTypes = {\n    visibleContacts: PropTypes.array.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"DeleteAllContactsBtn\":\"DeleteAllContacts_DeleteAllContactsBtn__4R-sx\"};","import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from \"react-router-dom\";\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectLoading, selectAllContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Container } from 'components/Container/Container';\n// import { Spinner } from 'components/Spinner/Spinner';\n\nimport css from './DeleteAllContacts.module.css';\n\n\nexport function DeleteAllContacts() {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const isLoading = useSelector(selectLoading);\n  // console.log(\"DeleteAllContacts==>isLoading:\", isLoading); //!\n\n\n  // console.log(\"DeleteAllContacts==>isDeleting:\", isDeleting); //!\n\n\n  const contacts = useSelector(selectAllContacts);\n  // console.log(\"Contacts==>contacts:\", contacts); //!\n\n\n\n\n\n  const handlDeleteAllContacts = () => {\n    for (const contact of contacts) {\n      const id = contact.id;\n      dispatch(deleteContact(id));\n    };\n    // navigate(\"/contacts\", { replace: true });\n  };\n\n\n\n\n  return (\n    <Container>\n      <button\n        type=\"button\"\n        className={css.DeleteAllContactsBtn}\n        onClick={handlDeleteAllContacts}\n        disabled={isLoading}\n      >\n        Delete all Contacts\n        {/* {isLoading ? [<Spinner size=\"18\" />, \" Deleting all Contacts...\"] : \"Delete all Contacts\"} */}\n      </button>\n    </Container>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectLoading } from 'redux/contacts/contactsSelectors';\n\nimport { getFilter } from 'redux/filter/filterSelectors';\n\nimport { selectAllContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Container } from 'components/Container/Container';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { DeleteAllContacts } from 'components/DeleteAllContacts/DeleteAllContacts';\n\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(selectLoading);\n    // console.log(\"Contacts==>isLoading:\", isLoading); //!\n\n    const filter = useSelector(getFilter);\n    // console.log(\"Contacts==>filter:\", filter); //!\n\n    const contacts = useSelector(selectAllContacts);\n    // console.log(\"Contacts==>contacts:\", contacts); //!\n\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n\n\n    //! Создание нового массива объектов из contacts с учетом значения поиска из filter\n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n            (contact.name.toLowerCase()).includes(normalizedFilter),\n        );\n    };\n\n    const visibleContacts = getVisibleContacts();\n    const totalContacts = contacts.length;\n\n\n\n    return (\n        <Container>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <p>Total: {totalContacts}</p>\n\n            {isLoading && <Loader />}\n\n            {contacts.length > 0 && (\n                <>\n                    <Filter />\n\n                    <ContactList\n                        visibleContacts={visibleContacts}\n                    />\n\n                    {/* <DeleteAllContacts /> */}\n                </>\n            )}\n\n            {contacts.length > 0 && !isLoading && <DeleteAllContacts />}\n\n        </Container>\n    );\n}\n\n","\nexport const selectLoading = state => state.contacts.isLoading;\n\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const getUploadContacts = state => state.contacts.uploadContacts;"],"names":["Container","_ref","children","_jsx","className","css","Loader","_jsxs","style","margin","Audio","width","getFilter","state","filter","spin","keyframes","_templateObject","_taggedTemplateLiteral","Spinner","_styled","CgSpinner","target","defaultProps","size","ContactForm","dispatch","useDispatch","contacts","useSelector","selectAllContacts","isLoading","selectLoading","_Fragment","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","find","item","toLowerCase","toast","concat","reset","addContact","id","type","pattern","title","required","disabled","ToastContainer","autoClose","theme","Filter","onChange","event","filterValue","changesFilter","ContactEditor","toggleModal","editContact","defaultValue","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","ContactListItem","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","deleteContact","ContactList","visibleContacts","map","_ref2","DeleteAllContacts","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","Contacts","fetchContacts","normalizedFilter","contact","includes","getVisibleContacts","totalContacts","length","items","getUploadContacts","uploadContacts"],"sourceRoot":""}